name: Docker Compose CI/CD Pipeline

on:
  push:
    branches:
      - main
      - dev
  pull_request:
    branches:
      - main
      - dev

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r app/requirements.txt
          pip install pytest pytest-cov

      - name: Run tests
        run: |
          cd app
          python -m pytest --cov=./ --cov-report=xml
          
      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: test-results
          path: app/coverage.xml

  build-and-push:
    needs: test
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/dev')
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Extract branch name
        shell: bash
        run: echo "BRANCH_NAME=${GITHUB_REF#refs/heads/}" >> $GITHUB_ENV

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: ./app
          file: ./app/Dockerfile
          push: true
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/crypto-sentiment:${{ env.BRANCH_NAME }}
            ${{ secrets.DOCKER_USERNAME }}/crypto-sentiment:${{ env.BRANCH_NAME }}-${{ github.sha }}

  deploy-to-test:
    needs: build-and-push
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/dev'
    steps:
      - name: Deploy to Test EC2
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.TEST_EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            cd ~/sentiment_analysis_service
            git checkout dev
            git pull origin dev
            echo "TAG=dev" > .env
            docker-compose pull
            docker-compose up -d
            echo "Deployed dev branch to test environment at $(date)"

  deploy-to-production:
    needs: build-and-push
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - name: Deploy to Production EC2
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.PROD_EC2_HOST || secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            cd ~/sentiment_analysis_service
            git checkout main
            git pull origin main
            echo "TAG=main" > .env
            docker-compose pull
            docker-compose up -d
            echo "Deployed main branch to production environment at $(date)"
